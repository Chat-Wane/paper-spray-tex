%!PS-Adobe-2.0 EPSF-2.0
%%Title: avgpath.eps
%%Creator: gnuplot 4.6 patchlevel 6
%%CreationDate: Fri May 15 02:37:37 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 10.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (avgpath.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 6)
  /Author (julian)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri May 15 02:37:37 2015)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
560 840 M
63 0 V
6216 0 R
-63 0 V
stroke
440 840 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
1.000 UL
LTb
560 1406 M
63 0 V
6216 0 R
-63 0 V
stroke
440 1406 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1)]
] -66.7 MRshow
1.000 UL
LTb
560 1971 M
63 0 V
6216 0 R
-63 0 V
stroke
440 1971 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 2)]
] -66.7 MRshow
1.000 UL
LTb
560 2537 M
63 0 V
6216 0 R
-63 0 V
stroke
440 2537 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 3)]
] -66.7 MRshow
1.000 UL
LTb
560 3102 M
63 0 V
6216 0 R
-63 0 V
stroke
440 3102 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 4)]
] -66.7 MRshow
1.000 UL
LTb
560 3668 M
63 0 V
6216 0 R
-63 0 V
stroke
440 3668 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 5)]
] -66.7 MRshow
1.000 UL
LTb
560 4233 M
63 0 V
6216 0 R
-63 0 V
stroke
440 4233 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 6)]
] -66.7 MRshow
1.000 UL
LTb
560 4799 M
63 0 V
6216 0 R
-63 0 V
stroke
440 4799 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 7)]
] -66.7 MRshow
1.000 UL
LTb
560 840 M
0 63 V
0 3896 R
0 -63 V
stroke
560 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 100)]
] -66.7 MCshow
1.000 UL
LTb
1190 840 M
0 31 V
0 3928 R
0 -31 V
1559 840 M
0 31 V
0 3928 R
0 -31 V
1820 840 M
0 31 V
0 3928 R
0 -31 V
2023 840 M
0 31 V
0 3928 R
0 -31 V
2189 840 M
0 31 V
0 3928 R
0 -31 V
2329 840 M
0 31 V
0 3928 R
0 -31 V
2450 840 M
0 31 V
0 3928 R
0 -31 V
2557 840 M
0 31 V
0 3928 R
0 -31 V
2653 840 M
0 63 V
0 3896 R
0 -63 V
stroke
2653 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1000)]
] -66.7 MCshow
1.000 UL
LTb
3283 840 M
0 31 V
0 3928 R
0 -31 V
3652 840 M
0 31 V
0 3928 R
0 -31 V
3913 840 M
0 31 V
0 3928 R
0 -31 V
4116 840 M
0 31 V
0 3928 R
0 -31 V
4282 840 M
0 31 V
0 3928 R
0 -31 V
4422 840 M
0 31 V
0 3928 R
0 -31 V
4543 840 M
0 31 V
0 3928 R
0 -31 V
4650 840 M
0 31 V
0 3928 R
0 -31 V
4746 840 M
0 63 V
0 3896 R
0 -63 V
stroke
4746 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 10000)]
] -66.7 MCshow
1.000 UL
LTb
5376 840 M
0 31 V
0 3928 R
0 -31 V
5745 840 M
0 31 V
0 3928 R
0 -31 V
6006 840 M
0 31 V
0 3928 R
0 -31 V
6209 840 M
0 31 V
0 3928 R
0 -31 V
6375 840 M
0 31 V
0 3928 R
0 -31 V
6515 840 M
0 31 V
0 3928 R
0 -31 V
6636 840 M
0 31 V
0 3928 R
0 -31 V
6743 840 M
0 31 V
0 3928 R
0 -31 V
6839 840 M
0 63 V
0 3896 R
0 -63 V
stroke
6839 640 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 100000)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
560 4799 N
560 840 L
6279 0 V
0 3959 V
-6279 0 V
Z stroke
LCb setrgbcolor
160 2819 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (Average shortest path)]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
3699 340 M
[ [(Helvetica) 200.0 0.0 true true 0 (number of peers \(log)]
[(Helvetica) 160.0 -60.0 true true 0 (10)]
[(Helvetica) 200.0 0.0 true true 0 (\))]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LT8
2653 4799 M
0 -3959 V
stroke
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
1400 4636 M
[ [(Helvetica) 200.0 0.0 true true 0 (Cyclon)]
] -66.7 MRshow
LT0
1520 4636 M
543 0 V
560 2247 M
1463 474 V
630 202 V
1463 466 V
630 196 V
1463 470 V
630 207 V
560 2247 Pls
2023 2721 Pls
2653 2923 Pls
4116 3389 Pls
4746 3585 Pls
6209 4055 Pls
6839 4262 Pls
1791 4636 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
560 2489 Crs
2023 2810 Crs
2653 2921 Crs
4116 3228 Crs
4746 3238 Crs
6209 3513 Crs
6839 3602 Crs
560 2885 Crs
2023 3161 Crs
2653 3133 Crs
4116 3381 Crs
4746 3425 Crs
6209 3702 Crs
6839 3764 Crs
560 2655 Crs
2023 2832 Crs
2653 2930 Crs
4116 3168 Crs
4746 3300 Crs
6209 3527 Crs
6839 3625 Crs
560 2720 Crs
2023 2917 Crs
2653 3021 Crs
4116 3274 Crs
4746 3416 Crs
6209 3598 Crs
6839 3691 Crs
560 2563 Crs
2023 2769 Crs
2653 2951 Crs
4116 3182 Crs
4746 3261 Crs
6209 3492 Crs
6839 3613 Crs
560 2809 Crs
2023 3086 Crs
2653 3008 Crs
4116 3310 Crs
4746 3423 Crs
6209 3648 Crs
6839 3678 Crs
560 2529 Crs
2023 2771 Crs
4116 3187 Crs
4746 3313 Crs
6209 3514 Crs
6839 3605 Crs
560 2619 Crs
2023 2891 Crs
2653 2998 Crs
4116 3204 Crs
4746 3358 Crs
6209 3585 Crs
6839 3645 Crs
560 2645 Crs
2023 2912 Crs
4116 3214 Crs
4746 3427 Crs
6209 3588 Crs
6839 3675 Crs
560 2584 Crs
2023 2784 Crs
2653 2993 Crs
4116 3234 Crs
4746 3380 Crs
6209 3541 Crs
6839 3706 Crs
560 2740 Crs
2023 2978 Crs
2653 3051 Crs
4116 3317 Crs
4746 3392 Crs
6209 3576 Crs
6839 3738 Crs
560 2851 Crs
2023 3008 Crs
2653 3095 Crs
4116 3297 Crs
4746 3323 Crs
6209 3616 Crs
6839 3654 Crs
560 2615 Crs
2023 3034 Crs
2653 3047 Crs
4116 3292 Crs
4746 3404 Crs
6209 3646 Crs
6839 3762 Crs
560 2721 Crs
2023 2910 Crs
2653 3032 Crs
4116 3300 Crs
4746 3399 Crs
6209 3613 Crs
6839 3713 Crs
560 2449 Crs
2023 2806 Crs
2653 2873 Crs
4116 3216 Crs
4746 3300 Crs
6209 3523 Crs
6839 3618 Crs
560 2614 Crs
2023 2841 Crs
2653 3008 Crs
4116 3276 Crs
4746 3382 Crs
6209 3607 Crs
6839 3669 Crs
560 2723 Crs
2023 2911 Crs
2653 3047 Crs
4116 3340 Crs
4746 3402 Crs
6209 3575 Crs
6839 3708 Crs
560 2733 Crs
2023 2896 Crs
2653 3065 Crs
4116 3228 Crs
4746 3296 Crs
6209 3597 Crs
6839 3653 Crs
560 2592 Crs
2023 2849 Crs
2653 3004 Crs
4116 3292 Crs
4746 3370 Crs
6209 3533 Crs
6839 3652 Crs
560 2664 Crs
2023 2884 Crs
2653 2928 Crs
4116 3231 Crs
4746 3291 Crs
6209 3578 Crs
6839 3649 Crs
560 2699 Crs
2023 2955 Crs
2653 3023 Crs
4116 3316 Crs
4746 3410 Crs
6209 3608 Crs
6839 3714 Crs
560 2660 Crs
2023 2916 Crs
2653 3026 Crs
4116 3299 Crs
4746 3315 Crs
6209 3582 Crs
6839 3665 Crs
560 2704 Crs
2023 2900 Crs
2653 2918 Crs
4116 3270 Crs
4746 3353 Crs
6209 3595 Crs
6839 3686 Crs
560 2670 Crs
2023 2869 Crs
2653 3033 Crs
4116 3287 Crs
4746 3345 Crs
6209 3567 Crs
6839 3710 Crs
560 2529 Crs
2023 2760 Crs
2653 2915 Crs
4116 3241 Crs
4746 3281 Crs
6209 3516 Crs
6839 3570 Crs
560 2674 Crs
2023 2789 Crs
2653 2971 Crs
4116 3177 Crs
4746 3321 Crs
6209 3535 Crs
6839 3651 Crs
560 2622 Crs
2023 2962 Crs
2653 3072 Crs
4116 3275 Crs
4746 3379 Crs
6209 3593 Crs
6839 3727 Crs
560 2582 Crs
2023 2911 Crs
2653 3009 Crs
4116 3247 Crs
4746 3353 Crs
6209 3569 Crs
6839 3679 Crs
560 2636 Crs
2023 2945 Crs
2653 3107 Crs
4116 3266 Crs
4746 3393 Crs
6209 3623 Crs
6839 3740 Crs
560 2579 Crs
2023 2707 Crs
2653 2885 Crs
4116 3146 Crs
4746 3249 Crs
6209 3510 Crs
6839 3593 Crs
560 2836 Crs
2023 2976 Crs
2653 3132 Crs
4116 3270 Crs
4746 3398 Crs
6209 3636 Crs
6839 3741 Crs
560 2544 Crs
2023 2890 Crs
2653 2916 Crs
4116 3243 Crs
4746 3303 Crs
6209 3525 Crs
6839 3604 Crs
560 2459 Crs
2023 2828 Crs
2653 2958 Crs
4116 3199 Crs
4746 3330 Crs
6209 3548 Crs
6839 3619 Crs
560 2546 Crs
2023 2729 Crs
2653 2925 Crs
4116 3155 Crs
4746 3286 Crs
6209 3489 Crs
6839 3609 Crs
560 2792 Crs
2023 3074 Crs
2653 3184 Crs
4116 3379 Crs
4746 3441 Crs
6209 3718 Crs
6839 3792 Crs
560 2485 Crs
2023 2808 Crs
2653 2927 Crs
4116 3164 Crs
4746 3239 Crs
6209 3478 Crs
6839 3587 Crs
560 2603 Crs
2023 2790 Crs
2653 2905 Crs
4116 3177 Crs
4746 3296 Crs
6209 3527 Crs
6839 3632 Crs
560 2535 Crs
2023 2872 Crs
2653 2919 Crs
4116 3206 Crs
4746 3336 Crs
6209 3544 Crs
6839 3640 Crs
560 2455 Crs
2023 2741 Crs
2653 2856 Crs
4116 3098 Crs
4746 3284 Crs
6209 3488 Crs
6839 3638 Crs
560 2537 Crs
2023 2913 Crs
2653 2959 Crs
4116 3288 Crs
4746 3336 Crs
6209 3578 Crs
6839 3687 Crs
560 2720 Crs
2023 3025 Crs
2653 3077 Crs
4116 3281 Crs
4746 3416 Crs
6209 3617 Crs
6839 3696 Crs
560 2596 Crs
2023 2876 Crs
2653 3002 Crs
4116 3251 Crs
4746 3336 Crs
6209 3561 Crs
6839 3634 Crs
560 2542 Crs
2023 2862 Crs
2653 2921 Crs
4116 3145 Crs
4746 3309 Crs
6209 3507 Crs
6839 3625 Crs
560 2611 Crs
2023 2968 Crs
2653 3169 Crs
4116 3298 Crs
4746 3381 Crs
6209 3633 Crs
6839 3797 Crs
560 2800 Crs
2023 3082 Crs
2653 3098 Crs
4116 3350 Crs
4746 3437 Crs
6209 3642 Crs
6839 3752 Crs
560 2584 Crs
2023 2883 Crs
2653 2935 Crs
4116 3217 Crs
4746 3313 Crs
6209 3520 Crs
6839 3642 Crs
560 2579 Crs
2023 2845 Crs
2653 2978 Crs
4116 3264 Crs
4746 3354 Crs
6209 3594 Crs
6839 3708 Crs
560 2653 Crs
2023 2852 Crs
2653 2934 Crs
4116 3290 Crs
4746 3324 Crs
6209 3587 Crs
6839 3678 Crs
560 2561 Crs
2023 2880 Crs
2653 2935 Crs
4116 3190 Crs
4746 3288 Crs
6209 3527 Crs
6839 3600 Crs
560 2600 Crs
2023 2859 Crs
2653 2972 Crs
4116 3245 Crs
4746 3368 Crs
6209 3614 Crs
6839 3647 Crs
560 2653 Crs
2023 2922 Crs
2653 2982 Crs
4116 3274 Crs
4746 3379 Crs
6209 3574 Crs
6839 3647 Crs
560 2678 Crs
2023 2922 Crs
2653 3041 Crs
4116 3252 Crs
4746 3382 Crs
6209 3597 Crs
6839 3686 Crs
560 2594 Crs
2023 2939 Crs
2653 3070 Crs
4116 3237 Crs
4746 3351 Crs
6209 3560 Crs
6839 3683 Crs
560 2657 Crs
2023 3028 Crs
2653 3022 Crs
4116 3291 Crs
4746 3394 Crs
6209 3563 Crs
6839 3703 Crs
560 2687 Crs
2023 2759 Crs
2653 2933 Crs
4116 3216 Crs
4746 3343 Crs
6209 3524 Crs
6839 3635 Crs
560 2708 Crs
2023 2958 Crs
2653 3049 Crs
4116 3220 Crs
4746 3352 Crs
6209 3615 Crs
6839 3716 Crs
560 2777 Crs
2023 2891 Crs
2653 3052 Crs
4116 3298 Crs
4746 3373 Crs
6209 3618 Crs
6839 3684 Crs
560 2680 Crs
2023 2888 Crs
2653 3018 Crs
4116 3204 Crs
4746 3366 Crs
6209 3550 Crs
6839 3696 Crs
560 2451 Crs
2023 2876 Crs
2653 2955 Crs
4116 3175 Crs
4746 3288 Crs
6209 3518 Crs
6839 3623 Crs
560 2761 Crs
2023 2990 Crs
2653 3008 Crs
4116 3289 Crs
4746 3405 Crs
6209 3640 Crs
6839 3690 Crs
560 2866 Crs
2023 3072 Crs
2653 3226 Crs
4116 3309 Crs
4746 3476 Crs
6209 3700 Crs
6839 3784 Crs
560 2582 Crs
2023 2860 Crs
2653 2969 Crs
4116 3219 Crs
4746 3348 Crs
6209 3535 Crs
6839 3619 Crs
560 2876 Crs
2023 2910 Crs
2653 3035 Crs
4116 3313 Crs
4746 3372 Crs
6209 3590 Crs
6839 3707 Crs
560 2803 Crs
2023 3049 Crs
2653 3158 Crs
4116 3370 Crs
4746 3469 Crs
6209 3611 Crs
6839 3723 Crs
560 2685 Crs
2023 2936 Crs
2653 2996 Crs
4116 3276 Crs
4746 3350 Crs
6209 3604 Crs
6839 3699 Crs
560 2674 Crs
2023 2856 Crs
2653 3010 Crs
4116 3280 Crs
4746 3318 Crs
6209 3548 Crs
6839 3622 Crs
560 2767 Crs
2023 2942 Crs
2653 3012 Crs
4116 3267 Crs
4746 3331 Crs
6209 3571 Crs
6839 3714 Crs
560 2581 Crs
2023 2797 Crs
2653 2969 Crs
4116 3217 Crs
4746 3355 Crs
6209 3532 Crs
6839 3624 Crs
560 2455 Crs
2023 2738 Crs
2653 2896 Crs
4116 3085 Crs
4746 3237 Crs
6209 3497 Crs
6839 3550 Crs
560 2529 Crs
2023 2904 Crs
2653 2984 Crs
4116 3215 Crs
4746 3345 Crs
6209 3567 Crs
6839 3651 Crs
560 2702 Crs
2023 2869 Crs
2653 3132 Crs
4116 3272 Crs
4746 3374 Crs
6209 3600 Crs
6839 3689 Crs
560 2720 Crs
2023 2884 Crs
2653 3003 Crs
4116 3199 Crs
4746 3340 Crs
6209 3569 Crs
6839 3667 Crs
560 2619 Crs
2023 3041 Crs
2653 3005 Crs
4116 3308 Crs
4746 3375 Crs
6209 3587 Crs
6839 3741 Crs
560 2577 Crs
2023 2911 Crs
2653 2966 Crs
4116 3199 Crs
4746 3334 Crs
6209 3549 Crs
6839 3689 Crs
560 2550 Crs
2023 2804 Crs
2653 2956 Crs
4116 3207 Crs
4746 3328 Crs
6209 3536 Crs
6839 3641 Crs
560 2660 Crs
2023 2890 Crs
2653 2995 Crs
4116 3221 Crs
4746 3359 Crs
6209 3584 Crs
6839 3657 Crs
560 2653 Crs
2023 2854 Crs
2653 2979 Crs
4116 3241 Crs
4746 3361 Crs
6209 3553 Crs
6839 3682 Crs
560 2678 Crs
2023 2873 Crs
2653 3045 Crs
4116 3229 Crs
4746 3334 Crs
6209 3542 Crs
6839 3702 Crs
560 2822 Crs
2023 3050 Crs
2653 3053 Crs
4116 3367 Crs
4746 3446 Crs
6209 3619 Crs
6839 3768 Crs
560 2775 Crs
2023 2953 Crs
2653 3109 Crs
4116 3281 Crs
4746 3368 Crs
6209 3594 Crs
6839 3697 Crs
560 2674 Crs
2023 2946 Crs
2653 3062 Crs
4116 3251 Crs
4746 3378 Crs
6209 3570 Crs
6839 3699 Crs
560 2822 Crs
2023 2949 Crs
2653 3010 Crs
4116 3310 Crs
4746 3398 Crs
6209 3627 Crs
6839 3711 Crs
560 2619 Crs
2023 2958 Crs
2653 3125 Crs
4116 3239 Crs
4746 3407 Crs
6209 3587 Crs
6839 3696 Crs
560 2571 Crs
2023 2866 Crs
2653 2956 Crs
4116 3199 Crs
4746 3309 Crs
6209 3609 Crs
6839 3631 Crs
560 2674 Crs
2023 2830 Crs
2653 2899 Crs
4116 3231 Crs
4746 3273 Crs
6209 3530 Crs
6839 3673 Crs
560 2563 Crs
2023 2842 Crs
2653 2969 Crs
4116 3190 Crs
4746 3381 Crs
6209 3530 Crs
6839 3617 Crs
560 2678 Crs
2023 2810 Crs
2653 2979 Crs
4116 3238 Crs
4746 3341 Crs
6209 3543 Crs
6839 3656 Crs
560 2560 Crs
2023 2775 Crs
2653 2998 Crs
4116 3180 Crs
4746 3304 Crs
6209 3518 Crs
6839 3639 Crs
560 2826 Crs
2023 3002 Crs
2653 3104 Crs
4116 3373 Crs
4746 3421 Crs
6209 3599 Crs
6839 3721 Crs
560 2442 Crs
2023 2803 Crs
2653 2891 Crs
4116 3109 Crs
4746 3246 Crs
6209 3471 Crs
6839 3574 Crs
560 2763 Crs
2023 2961 Crs
2653 3154 Crs
4116 3245 Crs
4746 3391 Crs
6209 3620 Crs
6839 3746 Crs
560 2613 Crs
2023 2821 Crs
2653 2951 Crs
4116 3289 Crs
4746 3330 Crs
6209 3560 Crs
6839 3652 Crs
560 2683 Crs
2023 3035 Crs
2653 3098 Crs
4116 3278 Crs
4746 3402 Crs
6209 3604 Crs
6839 3774 Crs
560 2594 Crs
2023 2890 Crs
2653 3016 Crs
4116 3172 Crs
4746 3268 Crs
6209 3528 Crs
6839 3642 Crs
560 2758 Crs
2023 2949 Crs
2653 3024 Crs
4116 3273 Crs
4746 3370 Crs
6209 3574 Crs
6839 3662 Crs
560 2495 Crs
2023 2841 Crs
2653 2929 Crs
4116 3171 Crs
4746 3310 Crs
6209 3551 Crs
6839 3628 Crs
560 2544 Crs
2023 2816 Crs
2653 2904 Crs
4116 3237 Crs
4746 3315 Crs
6209 3508 Crs
6839 3629 Crs
560 2708 Crs
2023 2923 Crs
2653 2974 Crs
4116 3251 Crs
4746 3356 Crs
6209 3558 Crs
6839 3670 Crs
560 2657 Crs
2023 2882 Crs
2653 2983 Crs
4116 3243 Crs
4746 3327 Crs
6209 3547 Crs
6839 3656 Crs
560 2603 Crs
2023 2833 Crs
2653 2951 Crs
4116 3258 Crs
4746 3342 Crs
6209 3576 Crs
6839 3673 Crs
% End plot #2
% Begin plot #3
1.000 UL
LT2
LCb setrgbcolor
1400 4436 M
[ [(Helvetica) 200.0 0.0 true true 0 (Spray)]
] -66.7 MRshow
LT2
1520 4436 M
543 0 V
560 2647 M
1463 249 V
630 108 V
1463 243 V
630 103 V
1463 221 V
630 101 V
% End plot #3
stroke
LTb
560 4799 N
560 840 L
6279 0 V
0 3959 V
-6279 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
